/*
 * Copyright (C) 2013 Sony Mobile Communications AB.
 * Copyright (C) 2011 Silicon Image Inc.
 *
 * Author: [Hirokuni Kawasaki <hirokuni.kawasaki@sonymobile.com>]
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2, as
 * published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 */

#ifndef __LINUX_DELAY_H
#define __LINUX_DELAY_H

/*edid for sharp oc24mx1*/
#define EDID_SHARP_LC_24_MX_1_BLOCK_0	\
	0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x4D, 0x10, 0xA3, 0x10, 0x00, 0x00, 0x00, 0x00,\
	0xFF, 0x16, 0x01, 0x03, 0x80, 0x34, 0x1D, 0x78, 0x2A, 0x1B, 0xBE, 0xA2, 0x55, 0x34, 0xB3, 0x26,\
	0x14, 0x4A, 0x52, 0xAF, 0xCE, 0x00, 0x90, 0x40, 0x81, 0x80, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,\
	0x01, 0x01, 0x01, 0x01, 0x01, 0x01, \
	0x01, 0x1D, 0x00, 0x72, 0x51, 0xD0, 0x1E, 0x20, 0x6E, 0x28, 0x55, 0x00, 0x09, 0x25, 0x21, 0x00, 0x00, 0x1E, \
	0x66, 0x21, 0x50, 0xB0, 0x51, 0x00, 0x1B, 0x30, 0x40, 0x70, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, \
	0x00, 0x00, 0x00, 0xFC, 0x00, 0x53, 0x48, 0x41, 0x52, 0x50, 0x20, 0x48, 0x44, 0x4D, 0x49, 0x0A, 0x20, 0x20, \
	0x00, 0x00, 0x00, 0xFD, 0x00, 0x17, 0x4C, 0x0F, 0x44, 0x0F, 0x00, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, \
	0x01, 0x82\


/* Sony 4K TV KD-65X9200A */
#define EDID_SONY_KD_65X9200A_BLOCK_0 \
	0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x4d, 0xd9, 0x03, 0x26, 0x01, 0x01, 0x01, 0x01,\
	0x01, 0x17, 0x01, 0x03, 0x80, 0x7a, 0x44, 0x78, 0x0a, 0x0d, 0xc9, 0xa0, 0x57, 0x47, 0x98, 0x27,\
	0x12, 0x48, 0x4c, 0x21, 0x08, 0x00, 0x81, 0x80, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,\
	0x01, 0x01, 0x01, 0x01, 0x01, 0x01, \
	0x02, 0x3a, 0x80, 0x18, 0x71, 0x38, 0x2d, 0x40, 0x58, 0x2c, 0x45, 0x00, 0xc2, 0xad, 0x42, 0x00, 0x00, 0x1e, \
	0x01, 0x1d, 0x00, 0x72, 0x51, 0xd0, 0x1e, 0x20, 0x6e, 0x28, 0x55, 0x00, 0xc2, 0xad, 0x42, 0x00, 0x00, 0x1e, \
	0x00, 0x00, 0x00, 0xfc, 0x00, 0x53, 0x4f, 0x4e, 0x59, 0x20, 0x54, 0x56, 0x20, 0x20, 0x2a, 0x30, 0x37, 0x0a, \
	0x00, 0x00, 0x00, 0xfd, 0x00, 0x3a, 0x3e, 0x0e, 0x46, 0x0f, 0x00, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, \
	0x01, 0x6e\

#define EDID_SONY_KD_65X9200A_BLOCK_EXT_1 \
0x02, 0x03, \
0x3e, /* offset d is 62 */\
0xf0, \
/* video data block */ \
0x4c, \
0x10, 0x05, 0x04, 0x20, 0x22, 0x3c, 0x3e, 0x03, 0x07, 0x02, 0x06, 0x01, /* <offset 16> */\
/* */ \
0x29, 0x09, 0x07, 0x07, 0x15, 0x07, 0x50, 0x35, 0x05, 0x50, 0x83, 0x01, 0x00, 0x00, /* <offset 30> */\
/* vendor specific data */ \
0x77, /* length : 23*/\
0x03, 0x0c, 0x00, /* 1 ~ 3 byte */\
0x20, 0x00, 0xb8, 0x3c, 0x2f, /* hdmi video present */\
/* there is no latency info */\
0xd0, /* 3D_present 1, 3D_Multi_present 10, Image_Size 10, Rsvd 0, Rsvd 0, Rsvd 0 */\
0x89, /* HDMI VIC LEN : 4 / HDMI 3D LEN : 9 */\
0x01, 0x02, 0x03, 0x04, /* hdmi vic */ \
0x01, 0x40, 0x00, 0x0f, 0x10, 0x40, 0x50, 0x60, 0x46, /* 3d */\
/* Colorimetry Data Block  */\
0xe2, 0x00, 0xfb, 0xe3, 0x05, 0x1f, 0x01, \
/* Detail Timing Discriptions <offset 62 ~ > */ \
0x8c, 0x0a, 0xd0, 0x8a, 0x20, 0xe0, 0x2d, 0x10, 0x10, 0x3e, 0x96, 0x00, 0xc2, 0xad, 0x42, 0x00, 0x00, 0x18,\
0x01, 0x1d, 0x80, 0x18, 0x71, 0x1c, 0x16, 0x20, 0x58, 0x2c, 0x25, 0x00, 0xc2, 0xad, 0x42, 0x00, 0x00, 0x9e,\
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xed\

uint8_t edid_sony_kd_65x9200a_block_0[EDID_BLOCK_SIZE] = {
	EDID_SONY_KD_65X9200A_BLOCK_0
};
uint8_t edid_sony_kd_65x9200a_block_ext_1[EDID_BLOCK_SIZE] = {
	EDID_SONY_KD_65X9200A_BLOCK_EXT_1
};

uint8_t edid_sony_kd_65x9200a_blocks[EDID_BLOCK_SIZE*2] = {
	EDID_SONY_KD_65X9200A_BLOCK_0,
	EDID_SONY_KD_65X9200A_BLOCK_EXT_1
};



/* Sony KDL-RB1 */
#define EDID_SONY_KDL_RB1_BLOCK_0 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x4d, 0xd9, 0x02, 0xe5, 0x01, 0x01, 0x01, 0x01,\
0x01, 0x17, 0x01, 0x03, 0x80, 0x59, 0x32, 0x78, 0x0a, 0x0d, 0xc9, 0xa0, 0x57, 0x47, 0x98, 0x27,\
0x12, 0x48, 0x4c, 0x21, 0x08, 0x00, 0x81, 0x80, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,\
0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x02, 0x3a, 0x80, 0x18, 0x71, 0x38, 0x2d, 0x40, 0x58, 0x2c,\
0x45, 0x00, 0x76, 0xf2, 0x31, 0x00, 0x00, 0x1e, 0x01, 0x1d, 0x00, 0x72, 0x51, 0xd0, 0x1e, 0x20,\
0x6e, 0x28, 0x55, 0x00, 0x76, 0xf2, 0x31, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x53,\
0x4f, 0x4e, 0x59, 0x20, 0x54, 0x56, 0x20, 0x20, 0x2a, 0x30, 0x31, 0x0a, 0x00, 0x00, 0x00, 0xfd,\
0x00, 0x30, 0x3e, 0x0e, 0x46, 0x0f, 0x00, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x01, 0x23\



#define EDID_SONY_KDL_RB1_BLOCK_EXT_1_VENDOR_SPECIFIC_DATA_BLOCK \
0x74, /* tag == 3 / L4 ==  20 */ \
0x03, 0x0c, 0x00, /* HDMI OUI , 1~3th byte*/\
0x20, \
0x00, \
0xb8, /* 6th byte */\
0x2d, \
0x2f, /* hdmi video present */\
0xd0, \
0x0a, /* 10th byte, HDMI VIC LEN = 0*/\
0x01, \
0x40, \
0x00, \
0x7f, /* 14th byte */\
0x20, 0x30, 0x70, 0x80, 0x90, 0x76 /* 20th byte*/

#define EDID_SONY_KDL_RB1_BLOCK_EXT_1_VENDOR_SPECIFIC_DATA_BLOCK__NO_3D_HDMI_VIC \
/*0x74*/0x6C, /* tag == 3 / L4 ==  20->12 */ \
0x03, 0x0c, 0x00, /* 1~3th byte  HDMI OUI */\
0x20, \
0x00, \
0xb8, /* 6th byte */\
0x2d, \
/*0x2f*/0x0F, /* 8th byte*/\
0xd0, \
0x0a, /* 10th byte */\
0x01, \
0x40, \
0x00, /* 13th byte */\
/*0x7f*/0x00, /* 14th byte HDMI_VIC_LEN / HDMI_3D_LEN*/\
/*0x20, 0x30, 0x70, 0x80, 0x90, 0x76*/0x00, 0x00, 0x00, 0x00, 0x00, 0x00/* 20th byte*/

#define EDID_SONY_KDL_RB1_BLOCK_EXT_1 \
0x02, /* 0  byte : tag */ \
0x03, /* 1  byte : revision number*/ \
0x3f, /* 2  byte : Byte number offset d where 18 byte descriptors begin. (63)*/ \
0xf0, /* 3  byte : Total number of Detailed Timing Desciptors ....*/ \
/* Video Data Block in CEA Data Block Tag Codes */ \
0x53, /* tag == 2 / L1 == 19 */ \
0x1f, /*31*/\
0x10, /*16*/\
0x14, \
0x05, \
0x13, \
0x04, \
0x20, \
0x22, \
0x3c, \
0x3e, \
0x12, \
0x16, \
0x03, \
0x07, \
0x11, \
0x15, \
0x02, \
0x06, \
0x01, \
/* Audio Data Block in CEA Data Block Tag Codes */ \
0x26, /* tag == 1 / L2 == 6 */ \
0x09, 0x07, 0x07, 0x15, 0x07, 0x50, \
/* Speaker Allocation Data Block in CEA Data Block Tag Codes */ \
0x83, /* tag == 4 / L3 == 3 */\
0x01, 0x00, 0x00, \
/* Vemdor Specific Data Block in CEA Data Block Tag Codes */ \
EDID_SONY_KDL_RB1_BLOCK_EXT_1_VENDOR_SPECIFIC_DATA_BLOCK ,\
0xe2, 0x00, 0xfb, 0xe3, 0x05, 0x1f, 0x01, 0x02,\
0x3a, 0x80, \
0xd0, 0x72, 0x38, 0x2d, 0x40, 0x10, 0x2c, 0x45, 0x80, 0x76, 0xf2, 0x31, 0x00, 0x00,\
0x1e, 0x01, 0x1d, 0x00, 0xbc, 0x52, 0xd0, 0x1e, 0x20, 0xb8, 0x28, 0x55, 0x40, 0x76, 0xf2, 0x31,\
0x00, 0x00, 0x1e, 0x01, 0x1d, 0x80, 0xd0, 0x72, 0x1c, 0x16, 0x20, 0x10, 0x2c, 0x25, 0x80, 0x76,\
0xf2, 0x31, 0x00, 0x00, 0x9e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49\


#define EDID_SONY_KDL_RB1_BLOCK_EXT_1__REMOVE_HDMI_and_3D_FROM_VSD \
0x02, /* 0  byte : tag */ \
0x03, /* 1  byte : revision number*/ \
0x34, /* 2  byte : Byte number offset d where 18 byte descriptors begin. (63 -> 63 - 11 = 52 )*/ \
0xf0, /* 3  byte : Total number of Detailed Timing Desciptors ....*/ \
/* Video Data Block in CEA Data Block Tag Codes */ \
0x53, /* tag == 2 / L1 == 19 */ \
0x1f, /*31*/\
0x10, /*16*/\
0x14, \
0x05, \
0x13, \
0x04, \
0x20, \
0x22, \
0x3c, \
0x3e, \
0x12, \
0x16, \
0x03, \
0x07, \
0x11, \
0x15, \
0x02, \
0x06, \
0x01, \
/* Audio Data Block in CEA Data Block Tag Codes */ \
0x26, /* tag == 1 / L2 == 6 */ \
0x09, 0x07, 0x07, 0x15, 0x07, 0x50, \
/* Speaker Allocation Data Block in CEA Data Block Tag Codes */ \
0x83, /* tag == 4 / L3 == 3 */\
0x01, 0x00, 0x00, \
/* Vemdor Specific Data Block in CEA Data Block Tag Codes */ \
/*0x74*/0x69, /* tag == 3 / L4 ==  20->9 */ \
0x03, 0x0c, 0x00, /* 1~3th byte  HDMI OUI */\
0x20, \
0x00, \
0xb8, /* 6th byte */\
0x2d, \
/*0x2f*/0x0F, /* 8th byte*/\
0x10, \
/*0x0a,*/ /* 10th byte */\
/*0x01, */\
/*0x40, */\
/*0x00,*/ /* 13th byte */\
/*0x7f*//* 14th byte HDMI_VIC_LEN / HDMI_3D_LEN*/\
/*0x20, 0x30, 0x70, 0x80, 0x90, 0x76*//* 20th byte*/\
0xe2, 0x00, 0xfb, 0xe3, 0x05, 0x1f, 0x01, 0x02,\
0x3a, 0x80, 0xd0, 0x72, 0x38, 0x2d, 0x40, 0x10, 0x2c, 0x45, 0x80, 0x76, 0xf2, 0x31, 0x00, 0x00,\
0x1e, 0x01, 0x1d, 0x00, 0xbc, 0x52, 0xd0, 0x1e, 0x20, 0xb8, 0x28, 0x55, 0x40, 0x76, 0xf2, 0x31,\
0x00, 0x00, 0x1e, 0x01, 0x1d, 0x80, 0xd0, 0x72, 0x1c, 0x16, 0x20, 0x10, 0x2c, 0x25, 0x80, 0x76,\
0xf2, 0x31, 0x00, 0x00, 0x9e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,/* padding + 11*/\
0x4f/* check sum*/\


uint8_t edid_sony_kld_rb1_block_0[EDID_BLOCK_SIZE] = {
	EDID_SONY_KDL_RB1_BLOCK_0
};
uint8_t edid_sony_kld_rb1_block_ext_1[EDID_BLOCK_SIZE] = {
	EDID_SONY_KDL_RB1_BLOCK_EXT_1
};

uint8_t edid_sony_kld_rb1_blocks[EDID_BLOCK_SIZE*2] = {
	EDID_SONY_KDL_RB1_BLOCK_0,
	EDID_SONY_KDL_RB1_BLOCK_EXT_1
};

uint8_t edid_sony_kld_rb1_block_ext_1_remove_hdmi_and_3d_from_vsd[EDID_BLOCK_SIZE] = {
	EDID_SONY_KDL_RB1_BLOCK_EXT_1__REMOVE_HDMI_and_3D_FROM_VSD
};



/*
 * edid for sharp oc24mx1
 */

#define EDID_SHARP_LC_24_MX_1_BLOCK_0	0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x4D, 0x10, 0xA3, 0x10, 0x00, 0x00, 0x00, 0x00,\
	0xFF, 0x16, 0x01, 0x03, 0x80, 0x34, 0x1D, 0x78, 0x2A, 0x1B, 0xBE, 0xA2, 0x55, 0x34, 0xB3, 0x26,\
	0x14, 0x4A, 0x52, 0xAF, 0xCE, 0x00, 0x90, 0x40, 0x81, 0x80, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01,\
	0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x1D, 0x00, 0x72, 0x51, 0xD0, 0x1E, 0x20, 0x6E, 0x28,\
	0x55, 0x00, 0x09, 0x25, 0x21, 0x00, 0x00, 0x1E, 0x66, 0x21, 0x50, 0xB0, 0x51, 0x00, 0x1B, 0x30,\
	0x40, 0x70, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x53,\
	0x48, 0x41, 0x52, 0x50, 0x20, 0x48, 0x44, 0x4D, 0x49, 0x0A, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFD,\
	0x00, 0x17, 0x4C, 0x0F, 0x44, 0x0F, 0x00, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x01, 0x82\

#define EDID_SHARP_LC_24_MX_1_BLOCK_EXT_1	\
0x02, /* 0  byte : tag */ \
0x03, /* 1  byte : revision number*/ \
0x2A, /* 2  byte : Byte number offset d where 18 byte descriptors begin. (42)*/ \
0x71, /* 3  byte : Total number of Detailed Timing Desciptors ....*/ \
/* Video Data Block in CEA Data Block Tag Codes */ \
0x4B, /* tag == 2 / L1 == 11 */ \
0x84, /* 132 ? */ \
0x3E, /* 62  ? */ \
0x10, /* 16  1920x1080p : 59.94/60Hz 16:9 */ \
0x20, /* 32  1920x1080p : 23.97/24Hz 16:9 */ \
0x22, /* 34  1920x1080p : 29.97/30Hz 16:9 */ \
0x05, /* 5   1920x1080i : 59.94/60Hz 16:9 */ \
0x03, /* 3   720x480p   : 59.94/60Hz 16:9 */ \
0x02, /* 2   */ \
0x07, /* 7   */ \
0x06, /* 6   */ \
0x01, /* 1   640x480p   : 59.94/60Hz 4:3 */ \
/* Audio Data Block in CEA Data Block Tag Codes */ \
0x29, /* tag == 1 / L2 == 9 */ \
0x09, /* Audio Format Code == 1 (Linear PCM), MaxNumber of channels == 2 */ \
0x07,  \
0x07,  \
0x15, /* Audio Format Code == 1 (Linear PCM), MaxNumber of channels == 6 */ \
0x07, \
0x50,  \
0x35, /* Audio Format Code == 6 (AAC), MaxNumber of channels == 6 */ \
0x07,  \
0x50,  \
/* Speaker Allocation Data Block in CEA Data Block Tag Codes */ \
0x83, /* tag == 4 / L3 == 3 */ \
0x01, /* FL/FR */ \
0x00,  \
0x00,  \
/* Vemdor Specific Data Block in CEA Data Block Tag Codes */ \
0x68, /* tag == 3 / L4 ==  8*/ \
0x03, \
0x0C,  \
0x00,  \
0x10,  \
0x00, /*  Payload */ \
0x80,  \
0x1E,  \
0x0F,  \
0xE2, 0x00,  \
0x7F, 0x02, 0x3A, 0x80, 0x18, 0x71, 0x38,\
0x2D, 0x40, 0x58, 0x2C, 0x45, 0x00, 0x09, 0x25, 0x21, 0x00, 0x00, 0x1E, 0x01, 0x1D, 0x80, 0x3E,\
0x73, 0x38, 0x2D, 0x40, 0x7E, 0x2C, 0x45, 0x80, 0x09, 0x25, 0x21, 0x00, 0x00, 0x1E, 0x01, 0x1D,\
0x80, 0x18, 0x71, 0x1C, 0x16, 0x20, 0x58, 0x2C, 0x25, 0x00, 0x09, 0x25, 0x21, 0x00, 0x00, 0x9E,\
0x8C, 0x0A, 0xD0, 0x8A, 0x20, 0xE0, 0x2D, 0x10, 0x10, 0x3E, 0x96, 0x00, 0x86, 0x25, 0x11, 0x00,\
0x00, 0x18,  \
/* padding  */ \
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
/* checksum */ \
0xB4 \


#define EDID_SHARP_LC_24_MX_1_BLOCK_EXT_1_NATIVE_VIC16	\
0x02, /* 0  byte : tag */ \
0x03, /* 1  byte : revision number*/ \
0x2A, /* 2  byte : Byte number offset d where 18 byte descriptors begin. (42)*/ \
0x71, /* 3  byte : Total number of Detailed Timing Desciptors ....*/ \
/* Video Data Block in CEA Data Block Tag Codes */ \
0x4B, /* tag == 2 / L1 == 11 */ \
0x84, /* 132 ? */ \
0x3E, /* 62  ? */ \
0x90, /* native 16  1920x1080p : 59.94/60Hz 16:9 */ \
0x20, /* 32  1920x1080p : 23.97/24Hz 16:9 */ \
0x22, /* 34  1920x1080p : 29.97/30Hz 16:9 */ \
0x05, /* 5   1920x1080i : 59.94/60Hz 16:9 */ \
0x03, /* 3   720x480p   : 59.94/60Hz 16:9 */ \
0x02, /* 2   */ \
0x07, /* 7   */ \
0x06, /* 6   */ \
0x01, /* 1   640x480p   : 59.94/60Hz 4:3 */ \
/* Audio Data Block in CEA Data Block Tag Codes */ \
0x29, /* tag == 1 / L2 == 9 */ \
0x09, /* Audio Format Code == 1 (Linear PCM), MaxNumber of channels == 2 */ \
0x07,  \
0x07,  \
0x15, /* Audio Format Code == 1 (Linear PCM), MaxNumber of channels == 6 */ \
0x07, \
0x50,  \
0x35, /* Audio Format Code == 6 (AAC), MaxNumber of channels == 6 */ \
0x07,  \
0x50,  \
/* Speaker Allocation Data Block in CEA Data Block Tag Codes */ \
0x83, /* tag == 4 / L3 == 3 */ \
0x01, /* FL/FR */ \
0x00,  \
0x00,  \
/* Vemdor Specific Data Block in CEA Data Block Tag Codes */ \
0x68, /* tag == 3 / L4 ==  8*/ \
0x03, \
0x0C,  \
0x00,  \
0x10,  \
0x00, /*  Payload */ \
0x80,  \
0x1E,  \
0x0F,  \
0xE2, 0x00,  \
0x7F, 0x02, 0x3A, 0x80, 0x18, 0x71, 0x38,\
0x2D, 0x40, 0x58, 0x2C, 0x45, 0x00, 0x09, 0x25, 0x21, 0x00, 0x00, 0x1E, 0x01, 0x1D, 0x80, 0x3E,\
0x73, 0x38, 0x2D, 0x40, 0x7E, 0x2C, 0x45, 0x80, 0x09, 0x25, 0x21, 0x00, 0x00, 0x1E, 0x01, 0x1D,\
0x80, 0x18, 0x71, 0x1C, 0x16, 0x20, 0x58, 0x2C, 0x25, 0x00, 0x09, 0x25, 0x21, 0x00, 0x00, 0x9E,\
0x8C, 0x0A, 0xD0, 0x8A, 0x20, 0xE0, 0x2D, 0x10, 0x10, 0x3E, 0x96, 0x00, 0x86, 0x25, 0x11, 0x00,\
0x00, 0x18,  \
/* padding  */ \
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
/* checksum */ \
0xB4 \


#define EDID_SHARP_LC_24_MX_1_BLOCK_EXT_1_REMOVE_VIC16	\
0x02, /* 0  byte : tag */ \
0x03, /* 1  byte : revision number*/ \
0x29, /* 2  byte : Byte number offset d where 18 byte descriptors begin. (42 -> 42 - 1 = 41)*/ \
0x71, /* 3  byte : Total number of Detailed Timing Desciptors ....*/ \
/* Video Data Block in CEA Data Block Tag Codes */ \
0x4A, /* tag == 2 / L1 == 10 */ \
0x84, /* 132 ? */ \
0x3E, /* 62  ? */ \
/*0x10,*/ /* 16  1920x1080p : 59.94/60Hz 16:9 */ \
0x20, /* 32  1920x1080p : 23.97/24Hz 16:9 */ \
0x22, /* 34  1920x1080p : 29.97/30Hz 16:9 */ \
0x05, /* 5   1920x1080i : 59.94/60Hz 16:9 */ \
0x03, /* 3   720x480p   : 59.94/60Hz 16:9 */ \
0x02, /* 2   */ \
0x07, /* 7   */ \
0x06, /* 6   */ \
0x01, /* 1   640x480p   : 59.94/60Hz 4:3 */ \
/* Audio Data Block in CEA Data Block Tag Codes */ \
0x29, /* tag == 1 / L2 == 9 */ \
0x09, /* Audio Format Code == 1 (Linear PCM), MaxNumber of channels == 2 */ \
0x07,  \
0x07,  \
0x15, /* Audio Format Code == 1 (Linear PCM), MaxNumber of channels == 6 */ \
0x07, \
0x50,  \
0x35, /* Audio Format Code == 6 (AAC), MaxNumber of channels == 6 */ \
0x07,  \
0x50,  \
/* Speaker Allocation Data Block in CEA Data Block Tag Codes */ \
0x83, /* tag == 4 / L3 == 3 */ \
0x01, /* FL/FR */ \
0x00,  \
0x00,  /* 28 byte */\
/* Vemdor Specific Data Block in CEA Data Block Tag Codes */ \
0x68, /* tag == 3 / L4 ==  8*/ \
0x03, \
0x0C,  \
0x00,  \
0x10,  \
0x00, /*  Payload */ \
0x80,  \
0x1E,  \
0x0F,  \
0xE2, 0x00, 0x7F, \
/* 18 byte descriptors begin (41 byte)*/\
0x02, 0x3A, 0x80, 0x18, 0x71, 0x38,\
0x2D, 0x40, 0x58, 0x2C, 0x45, 0x00, 0x09, 0x25, 0x21, 0x00, 0x00, 0x1E, 0x01, 0x1D, 0x80, 0x3E,\
0x73, 0x38, 0x2D, 0x40, 0x7E, 0x2C, 0x45, 0x80, 0x09, 0x25, 0x21, 0x00, 0x00, 0x1E, 0x01, 0x1D,\
0x80, 0x18, 0x71, 0x1C, 0x16, 0x20, 0x58, 0x2C, 0x25, 0x00, 0x09, 0x25, 0x21, 0x00, 0x00, 0x9E,\
0x8C, 0x0A, 0xD0, 0x8A, 0x20, 0xE0, 0x2D, 0x10, 0x10, 0x3E, 0x96, 0x00, 0x86, 0x25, 0x11, 0x00,\
0x00, 0x18,  \
 /* padding  + 1 than original edid code */ \
0x00, /* +1 */ \
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
 /* checksum */ \
0xc6 \

static uint8_t edid_sharp_lc24mx1_block_0 [EDID_BLOCK_SIZE] = {
	EDID_SHARP_LC_24_MX_1_BLOCK_0
};

static uint8_t edid_sharp_lc24mx1_ext_block_1 [EDID_BLOCK_SIZE] = {
	EDID_SHARP_LC_24_MX_1_BLOCK_EXT_1
};

static uint8_t edid_sharp_lc24mx1_all_blocks [256] = {
	EDID_SHARP_LC_24_MX_1_BLOCK_0,
	EDID_SHARP_LC_24_MX_1_BLOCK_EXT_1
};

static uint8_t edid_sharp_lc24mx1_ext_block_1_remove_vic16 [EDID_BLOCK_SIZE] = {
	EDID_SHARP_LC_24_MX_1_BLOCK_EXT_1_REMOVE_VIC16
};

static uint8_t edid_sharp_lc24mx1_ext_block_1_native_vic16 [EDID_BLOCK_SIZE] = {
	EDID_SHARP_LC_24_MX_1_BLOCK_EXT_1_NATIVE_VIC16
};

static uint8_t edid_sharp_lc24mx1_blocks [EDID_BLOCK_SIZE*2] = {
	EDID_SHARP_LC_24_MX_1_BLOCK_0,
	EDID_SHARP_LC_24_MX_1_BLOCK_EXT_1
};

static uint8_t edid_sharp_lc24mx1_blocks_remove_vic16 [EDID_BLOCK_SIZE*2] = {
	EDID_SHARP_LC_24_MX_1_BLOCK_0,
	EDID_SHARP_LC_24_MX_1_BLOCK_EXT_1_REMOVE_VIC16
};

#define EDID_SHARP_LC_24_MX_1_BLOCK_EXT_1_REMOVE_VIC_62_5_2_7_6	\
0x02, /* 0  byte : tag */ \
0x03, /* 1  byte : revision number*/ \
0x25, /* 2  byte : Byte number offset d where 18 byte descriptors begin. (42 -> 42 - 5 = 37)*/ \
0x71, /* 3  byte : Total number of Detailed Timing Desciptors ....*/ \
/* Video Data Block in CEA Data Block Tag Codes */ \
0x46, /* tag == 2 / L1 == 6 */ \
0x84, /* native : 1, vic 4 ? */ \
/*0x3E,*/ /* 62  ? */ \
0x10, /* 16  1920x1080p : 59.94/60Hz 16:9 */ \
0x20, /* 32  1920x1080p : 23.97/24Hz 16:9 */ \
0x22, /* 34  1920x1080p : 29.97/30Hz 16:9 */ \
/*0x05,*/ /* 5   1920x1080i : 59.94/60Hz 16:9 */ \
0x03, /* 3   720x480p   : 59.94/60Hz 16:9 */ \
/*0x02,*/ /* 2   */ \
/*0x07,*/ /* 7   */ \
/*0x06,*/ /* 6   */ \
0x01, /* 1   640x480p   : 59.94/60Hz 4:3 */ \
/* Audio Data Block in CEA Data Block Tag Codes */ \
0x29, /* tag == 1 / L2 == 9 */ \
0x09, /* Audio Format Code == 1 (Linear PCM), MaxNumber of channels == 2 */ \
0x07,  \
0x07,  \
0x15, /* Audio Format Code == 1 (Linear PCM), MaxNumber of channels == 6 */ \
0x07, \
0x50,  \
0x35, /* Audio Format Code == 6 (AAC), MaxNumber of channels == 6 */ \
0x07,  \
0x50,  \
/* Speaker Allocation Data Block in CEA Data Block Tag Codes */ \
0x83, /* tag == 4 / L3 == 3 */ \
0x01, /* FL/FR */ \
0x00,  \
0x00,  \
/* Vemdor Specific Data Block in CEA Data Block Tag Codes */ \
0x68, /* tag == 3 / L4 ==  8*/ \
0x03, \
0x0C,  \
0x00,  \
0x10,  \
0x00, /*  Payload */ \
0x80,  \
0x1E,  \
0x0F,  \
0xE2, 0x00, 0x7F, \
/*18 byte descriptors begin */\
0x02, 0x3A, 0x80, 0x18, 0x71, 0x38,\
0x2D, 0x40, 0x58, 0x2C, 0x45, 0x00, 0x09, 0x25, 0x21, 0x00, 0x00, 0x1E, 0x01, 0x1D, 0x80, 0x3E,\
0x73, 0x38, 0x2D, 0x40, 0x7E, 0x2C, 0x45, 0x80, 0x09, 0x25, 0x21, 0x00, 0x00, 0x1E, 0x01, 0x1D,\
0x80, 0x18, 0x71, 0x1C, 0x16, 0x20, 0x58, 0x2C, 0x25, 0x00, 0x09, 0x25, 0x21, 0x00, 0x00, 0x9E,\
0x8C, 0x0A, 0xD0, 0x8A, 0x20, 0xE0, 0x2D, 0x10, 0x10, 0x3E, 0x96, 0x00, 0x86, 0x25, 0x11, 0x00,\
0x00, 0x18,  \
/* padding  + 5 than original edid code */ \
0x00, 0x00, 0x00, 0x00, 0x00, \
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
 /* checksum todo : modify*/ \
0x10 \



static uint8_t edid_sharp_lc24mx1_ext_block_1_remove_vic_62_5_2_7_6[EDID_BLOCK_SIZE] = {
	EDID_SHARP_LC_24_MX_1_BLOCK_EXT_1_REMOVE_VIC_62_5_2_7_6
};



#define EDID_SHARP_LC_24_MX_1_BLOCK_EXT_1_REMOVE_VIC_62_16_5_2_7_6	\
0x02, /* 0  byte : tag */ \
0x03, /* 1  byte : revision number*/ \
0x24, /* 2  byte : Byte number offset d where 18 byte descriptors begin. (42 -> 42 - 6 = 36)*/ \
0x71, /* 3  byte : Total number of Detailed Timing Desciptors ....*/ \
/* Video Data Block in CEA Data Block Tag Codes */ \
0x45, /* tag == 2 / L1 == 5 */ \
0x84, /* 132 ? */ \
/*0x3E,*/ /* 62  ? */ \
/*0x10,*/ /* 16  1920x1080p : 59.94/60Hz 16:9 */ \
0x20, /* 32  1920x1080p : 23.97/24Hz 16:9 */ \
0x22, /* 34  1920x1080p : 29.97/30Hz 16:9 */ \
/*0x05,*/ /* 5   1920x1080i : 59.94/60Hz 16:9 */ \
0x03, /* 3   720x480p   : 59.94/60Hz 16:9 */ \
/*0x02,*/ /* 2   */ \
/*0x07,*/ /* 7   */ \
/*0x06,*/ /* 6   */ \
0x01, /* 1   640x480p   : 59.94/60Hz 4:3 */ \
/* Audio Data Block in CEA Data Block Tag Codes */ \
0x29, /* tag == 1 / L2 == 9 */ \
0x09, /* Audio Format Code == 1 (Linear PCM), MaxNumber of channels == 2 */ \
0x07,  \
0x07,  \
0x15, /* Audio Format Code == 1 (Linear PCM), MaxNumber of channels == 6 */ \
0x07, \
0x50,  \
0x35, /* Audio Format Code == 6 (AAC), MaxNumber of channels == 6 */ \
0x07,  \
0x50,  \
/* Speaker Allocation Data Block in CEA Data Block Tag Codes */ \
0x83, /* tag == 4 / L3 == 3 */ \
0x01, /* FL/FR */ \
0x00,  \
0x00,  \
/* Vemdor Specific Data Block in CEA Data Block Tag Codes */ \
0x68, /* tag == 3 / L4 ==  8*/ \
0x03, \
0x0C,  \
0x00,  \
0x10,  \
0x00, /*  Payload */ \
0x80,  \
0x1E,  \
0x0F,  \
0xE2, 0x00,  \
0x7F, 0x02, 0x3A, 0x80, 0x18, 0x71, 0x38,\
0x2D, 0x40, 0x58, 0x2C, 0x45, 0x00, 0x09, 0x25, 0x21, 0x00, 0x00, 0x1E, 0x01, 0x1D, 0x80, 0x3E,\
0x73, 0x38, 0x2D, 0x40, 0x7E, 0x2C, 0x45, 0x80, 0x09, 0x25, 0x21, 0x00, 0x00, 0x1E, 0x01, 0x1D,\
0x80, 0x18, 0x71, 0x1C, 0x16, 0x20, 0x58, 0x2C, 0x25, 0x00, 0x09, 0x25, 0x21, 0x00, 0x00, 0x9E,\
0x8C, 0x0A, 0xD0, 0x8A, 0x20, 0xE0, 0x2D, 0x10, 0x10, 0x3E, 0x96, 0x00, 0x86, 0x25, 0x11, 0x00,\
0x00, 0x18,  \
/* padding  + 6 than original edid code */ \
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, \
 /* checksum todo : modify*/ \
0x22 \

static uint8_t edid_sharp_lc24mx1_ext_block_1_remove_specific_vic[EDID_BLOCK_SIZE] = {
	EDID_SHARP_LC_24_MX_1_BLOCK_EXT_1_REMOVE_VIC_62_16_5_2_7_6
};

static uint8_t edid_sharp_lc24mx1_ext_block_1_remove_vic_62_16_5_2_7_6[EDID_BLOCK_SIZE] = {
	EDID_SHARP_LC_24_MX_1_BLOCK_EXT_1_REMOVE_VIC_62_16_5_2_7_6
};

/* kdl-32ex700 ext 1*/
static uint8_t edid_sony_kdl_32ex700_ext_block_1[EDID_BLOCK_SIZE] = {
0x02, 0x03, 0x28, 0xF0, 0x49, 0x10, 0x04, 0x05, 0x03, 0x02, 0x07, 0x06, 0x20, 0x01, 0x29, 0x09,
0x07, 0x07, 0x15, 0x07, 0x50, 0x35, 0x05, 0x50, 0x83, 0x01, 0x00, 0x00, 0x68, 0x03, 0x0C, 0x00,
0x20, 0x00, 0xB8, 0x2D, 0x0F, 0xE2, 0x00, 0x7B, 0x01, 0x1D, 0x80, 0x18, 0x71, 0x1C, 0x16, 0x20,
0x58, 0x2C, 0x25, 0x00, 0x40, 0x84, 0x63, 0x00, 0x00, 0x9E, 0x8C, 0x0A, 0xD0, 0x8A, 0x20, 0xE0,
0x2D, 0x10, 0x10, 0x3E, 0x96, 0x00, 0x40, 0x84, 0x63, 0x00, 0x00, 0x18, 0x8C, 0x0A, 0xD0, 0x8A,
0x20, 0xE0, 0x2D, 0x10, 0x10, 0x3E, 0x96, 0x00, 0xB0, 0x84, 0x43, 0x00, 0x00, 0x18, 0x8C, 0x0A,
0xA0, 0x14, 0x51, 0xF0, 0x16, 0x00, 0x26, 0x7C, 0x43, 0x00, 0xB0, 0x84, 0x43, 0x00, 0x00, 0x98,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40 };


/* CTS with Simplay 3.2.3.1, 3.2.3.2, 3.2.3.3, 3.2.3.4  */
const static uint8_t edid_cts_simplay_block_0[EDID_BLOCK_SIZE] = {
0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x4D, 0x29, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
0x05, 0x15, 0x01, 0x03, 0x80, 0x50, 0x2D, 0x78, 0x0A, 0x0D, 0xC9, 0xA0, 0x57, 0x47, 0x98, 0x27,
0x12, 0x48, 0x4C,
/*0x23*/
0x21,/* Established Timing I */
0x08,/* Established Timing II */
0x00,/* Established Timing III */
/*0x26 (32)*/
0x81, 0x80,
0x01, 0x01,/* blank */
0x01, 0x01,/* blank */
0x01, 0x01,/* blank */
0x01, 0x01,/* blank */
0x01, 0x01,/* blank */
0x01, 0x01,/* blank */
0x01, 0x01,/* blank */
0xD6, 0x09, 0x80, 0xA0, 0x20, 0xE0, 0x2D, 0x10, 0x08, 0x60,
0x22, 0x00, 0x13, 0x8E, 0x21, 0x08, 0x08, 0x18, 0xD6, 0x09, 0x80, 0xA0, 0x20, 0xE0, 0x2D, 0x10,
0x08, 0x60, 0x22, 0x00, 0x13, 0x8E, 0x21, 0x08, 0x08, 0x18, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x4D,
0x48, 0x4C, 0x20, 0x43, 0x54, 0x53, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFD,
0x00, 0x32, 0x3D, 0x1C, 0x22, 0x08, 0x00, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x01, 0xD3 };

/* st : standard timing , et : established timing */
const static uint8_t edid_cts_simplay_block_0__remain_bit_5_at_et1_and_st_is_all_blank[EDID_BLOCK_SIZE] = {
0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x4D, 0x29, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
0x05, 0x15, 0x01, 0x03, 0x80, 0x50, 0x2D, 0x78, 0x0A, 0x0D, 0xC9, 0xA0, 0x57, 0x47, 0x98, 0x27,
0x12, 0x48, 0x4C,
/*0x23*/
0x20,/* Established Timing I */
0x00,/* Established Timing II */
0x00,/* Established Timing III */
/*0x26 (32)*/
0x01, 0x01,/* blank */
0x01, 0x01,/* blank */
0x01, 0x01,/* blank */
0x01, 0x01,/* blank */
0x01, 0x01,/* blank */
0x01, 0x01,/* blank */
0x01, 0x01,/* blank */
0x01, 0x01,/* blank */
0xD6, 0x09, 0x80, 0xA0, 0x20, 0xE0, 0x2D, 0x10, 0x08, 0x60,
0x22, 0x00, 0x13, 0x8E, 0x21, 0x08, 0x08, 0x18, 0xD6, 0x09, 0x80, 0xA0, 0x20, 0xE0, 0x2D, 0x10,
0x08, 0x60, 0x22, 0x00, 0x13, 0x8E, 0x21, 0x08, 0x08, 0x18, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x4D,
0x48, 0x4C, 0x20, 0x43, 0x54, 0x53, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00, 0x00, 0x00, 0xFD,
0x00, 0x32, 0x3D, 0x1C, 0x22, 0x08, 0x00, 0x0A, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x01, 0xDb };


/* 4 blocks data. CTS 3.2.6.1 */
/*
<6>[   92.813624] 0000: 00 FF FF FF FF FF FF 00 4D 29 00 00 02 00 00 00
<6>[   92.813626] 0010: 05 15 01 03 80 50 2D 78 0A 0D C9 A0 57 47 98 27
<6>[   92.813628] 0020: 12 48 4C 21 08 00 81 80 01 01 01 01 01 01 01 01
<6>[   92.813630] 0030: 01 01 01 01 01 01 01 1D 80 18 71 1C 16 20 58 2C
<6>[   92.813633] 0040: 25 00 C4 8E 21 00 00 9E 8C 0A D0 8A 20 E0 2D 10
<6>[   92.813635] 0050: 10 3E 96 00 C4 8E 21 00 00 18 00 00 00 FC 00 4D
<6>[   92.813637] 0060: 48 4C 20 43 54 53 0A 20 20 20 20 20 00 00 00 FD
<6>[   92.813639] 0070: 00 32 3D 1C 22 08 00 0A 20 20 20 20 20 20 03 61

<6>[   92.877194] 0000: F0 02 02 00 00 00 00 00 00 00 00 00 00 00 00 00
<6>[   92.877197] 0010: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
<6>[   92.877199] 0020: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
<6>[   92.877201] 0030: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
<6>[   92.877203] 0040: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
<6>[   92.877205] 0050: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
<6>[   92.877207] 0060: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
<6>[   92.877210] 0070: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 0C

<6>[   92.941002] 0000: 02 03 33 71 4E A2 01 02 03 04 05 06 07 11 12 13
<6>[   92.941005] 0010: 14 15 16 E2 00 FF 23 0D 7F 07 78 03 0C 00 10 00
<6>[   92.941008] 0020: F9 50 EF 80 80 80 80 C0 67 01 02 03 01 3F AA CC
<6>[   92.941011] 0030: 77 11 00 01 1D 00 72 51 D0 1E 20 6E 28 55 00 C4
<6>[   92.941013] 0040: 8E 21 00 00 1E 01 1D 00 BC 52 D0 1E 20 B8 28 55
<6>[   92.941017] 0050: 40 C4 8E 21 00 00 1E 8C 0A A0 14 51 F0 16 00 26
<6>[   92.941019] 0060: 7C 43 00 C4 8E 21 00 00 98 8C 0A A0 20 51 20 18
<6>[   92.941022] 0070: 10 18 7E 23 00 C4 8E 21 00 00 98 00 00 00 00 16
*/

uint8_t test_list[128] = {
0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 
0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0, 0xC0 };
uint8_t test_list_1[128] = {
0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 
0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80};
uint8_t test_list_2[128] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };


uint8_t Asus_VX239_EDID_EXT_BLOCK[128] = {
0x02, 0x03, 0x1D, 0xF1, 0x4A, 0x90, 0x04, 0x03, 0x01, 0x14, 0x12, 0x05, 0x1F, 0x10, 0x13, 0x23,
0x09, 0x07, 0x07, 0x83, 0x01, 0x00, 0x00, 0x65, 0x03, 0x0C, 0x00, 0x10, 0x00, 0x02, 0x3A, 0x80,
0x18, 0x71, 0x38, 0x2D, 0x40, 0x58, 0x2C, 0x45, 0x00, 0x56, 0x50, 0x21, 0x00, 0x00, 0x1E, 0x01,
0x1D, 0x80, 0x18, 0x71, 0x1C, 0x16, 0x20, 0x58, 0x2C, 0x25, 0x00, 0x56, 0x50, 0x21, 0x00, 0x00,
0x9E, 0x01, 0x1D, 0x00, 0x72, 0x51, 0xD0, 0x1E, 0x20, 0x6E, 0x28, 0x55, 0x00, 0x56, 0x50, 0x21,
0x00, 0x00, 0x1E, 0x8C, 0x0A, 0xD0, 0x8A, 0x20, 0xE0, 0x2D, 0x10, 0x10, 0x3E, 0x96, 0x00, 0x56,
0x50, 0x21, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8E
};

uint8_t Asus_VX239_EDID_EXT_BLOCK_Remove_vic_16_from_svd[128] = {
0x02, 0x03, 0x1b, 0xF1, 0x48, 0x04, 0x03, 0x01, 0x14, 0x12, 0x05, 0x1F, 0x13, 0x23,
0x09, 0x07, 0x07, 0x83, 0x01, 0x00, 0x00, 0x65, 0x03, 0x0C, 0x00, 0x10, 0x00, 0x02, 0x3A, 0x80,
0x18, 0x71, 0x38, 0x2D, 0x40, 0x58, 0x2C, 0x45, 0x00, 0x56, 0x50, 0x21, 0x00, 0x00, 0x1E, 0x01,
0x1D, 0x80, 0x18, 0x71, 0x1C, 0x16, 0x20, 0x58, 0x2C, 0x25, 0x00, 0x56, 0x50, 0x21, 0x00, 0x00,
0x9E, 0x01, 0x1D, 0x00, 0x72, 0x51, 0xD0, 0x1E, 0x20, 0x6E, 0x28, 0x55, 0x00, 0x56, 0x50, 0x21,
0x00, 0x00, 0x1E, 0x8C, 0x0A, 0xD0, 0x8A, 0x20, 0xE0, 0x2D, 0x10, 0x10, 0x3E, 0x96, 0x00, 0x56,
0x50, 0x21, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x32
};
#endif /* __LINUX_DELAY_H */
